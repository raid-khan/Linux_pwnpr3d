package se.kth.ics.pwnpr3d.layer2.software;

import se.kth.ics.pwnpr3d.datatypes.EncryptionType;
import se.kth.ics.pwnpr3d.datatypes.ImpactType;
import se.kth.ics.pwnpr3d.layer1.Data;
import se.kth.ics.pwnpr3d.layer1.Vulnerability;
import se.kth.ics.pwnpr3d.util.Sampler;

import java.util.Set;

public class EncryptionVulnerability extends Vulnerability{


    public EncryptionVulnerability(String name, NetworkedApplication superAsset, ImpactType impact, EncryptionType encryptionType){
        super(name, superAsset, impact);

        if (Sampler.bernoulliDistribution(encryptionType.getpCompromisedConfidentiality())) {
            addReadableData(superAsset.getOwnedData());
        }

        if (Sampler.bernoulliDistribution(encryptionType.getpCompromisedIntegrity())) {
            addWritableData(superAsset.getOwnedData());
        }

        if (Sampler.bernoulliDistribution(encryptionType.getpCompromisedAvailability())) {
            addDeniedServiceData(superAsset.getOwnedData());
        }

    }

    public void addReadableData(Set<Data> data) {
        data.forEach(d->addReadableData(d));
    }

    public void addWritableData(Set<Data> data) {
        data.forEach(d->addWritableData(d));
    }

    public void addDeniedServiceData(Set<Data> data) {
        data.forEach(d->addDosData(d));
    }

}
